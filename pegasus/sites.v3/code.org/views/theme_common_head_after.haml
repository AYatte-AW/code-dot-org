// load jQuery with 'defer' so it doesn't block DOM building and page rendering.
// Any script with 'defer: true' or inline after DOMContentLoaded event
// will have access to the jQuery globals.
%script{src:'/js/jquery.min.js', defer: true}

:javascript
  (function() {
    var scriptTag = document.createElement('script');
    scriptTag.type = 'text/javascript';
    scriptTag.async = true;
    scriptTag.src = '/js/400912536.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(scriptTag, s);
  })();
  function optimizelyTimeout() {
    window.optimizely = window.optimizely|| [];
    if (!window.optimizely.data) {
      window.optimizely.push("timeout");
    }
  }
  setTimeout(optimizelyTimeout, 1000);
- response.add_header 'Link', "</js/400912536.js>; rel=preload; as=script"

:javascript
  var is_ie8 = false;
/[if IE 8]
  :javascript
    var is_ie8 = true;

= view :theme_google_analytics

%script{src: minifiable_asset_path("js/code.org/views/theme_common_head_after.js"), defer: true}

/[if lt IE 9]
  %script{:src=>'/js/html5shiv.js'}
  %script{src:'/js/respond.min.js'}

- if header['chart']
  %script{src:'https://www.google.com/jsapi'}

- if @header['video_player']
  :javascript
    document.addEventListener('DOMContentLoaded', function() {
      loadVideos(window.location.search.indexOf("force_youtube_fallback") !== -1)
    });
