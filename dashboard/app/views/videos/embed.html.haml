- video = local_assigns[:video]
- if current_user.try(:admin?) && !Rails.env.production?
  - require 'httparty'
  - response = HTTParty.head("https://videos.code.org/youtube/#{video.key}.jpg").response
  - unless response.is_a? ::Net::HTTPSuccess
    - require 'cdo/video/youtube'
    - Youtube.process(video.key)
%head
  / video.js and shims must be in the <head> for older IEs to work.
  /[if lt IE 9]
    %script{src: '/shared/js/video/build/videojs-ie8.js'}
  %script{async:'async', src: '/shared/js/video/build/video.js'}
%html{:dir => locale_dir}
  :css
    #video-container {
      width: 100%;
      height: 100%;
      overflow: hidden;
    }

    #video {
      border: 0;
    }

    body {
      background-color: #000;
      color: #fff;
      height: 100%;
      width: 100%;
      overflow: hidden;
      position: absolute;
      padding: 0;
      margin: 0;
    }

  #video-container
    - videojs_sources = []
    - videojs_sources << {src: video.download, type: 'video/mp4'} unless params.has_key?(:youtube_only)
    - videojs_sources << {src: video.youtube_url, type: 'video/youtube'} unless params.has_key?(:fallback_only)
  :javascript
    window.videojsOpts = {
      fallbackOnly: #{ params.has_key?(:fallback_only).to_json},
      thumbnail: #{ video.thumbnail_path.to_json},
      autoplay: #{ params.has_key?(:autoplay)},
      src: #{ videojs_sources.to_json}
    };
