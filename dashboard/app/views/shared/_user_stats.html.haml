- script_levels = user ? user.levels_from_script(script) : script.script_levels
- user_level_info = level_infos(user, script_levels)
- is_teacher = user && user.teacher?
- cache([locale, script, hash_key(user_level_info), is_teacher]) do
  .user-stats-block
    - levels = script_levels.group_by(&:stage)
    - levels.each_pair do |stage, sl_group|
      - should_show_lesson_plan = script.has_lesson_plan? && is_teacher
      .game-group
        .stage
          %span
            = stage.localized_title
          - if should_show_lesson_plan
            .stage-lesson-plan-link
              = link_to t('view_lesson_plan'), stage.lesson_plan_html_url

        .games
          - sl_group = sl_group.sort_by {|sl| sl.position}
          - sl_group.each do |sl|
            .level
              - css_class, link = user_level_info[sl.id]
              - if sl.assessment
                - puzzle_outer_class = 'puzzle_outer_assessment'
              - else
                - puzzle_outer_class = 'puzzle_outer_level'
              %span{id: sl.level_id.to_s, class: puzzle_outer_class}
                %a.level_link{ href: link, class: css_class}
                  - unplugged = sl.level.unplugged?
                  - if unplugged
                    %span.puzzle-named
                      =sl.level_display_text
                  - elsif css_class == 'passed'
                    = check_mark_html
                  - elsif css_class == 'perfect'
                    = check_mark_html
                  - else
                    %span.puzzle-number
                      =sl.level_display_text
    = render partial: 'shared/user_stats_key'

- if script.trophies?
  - concept_progress = user ? user.concept_progress : nil
  %div{style: 'clear: both;'}
  #trophies
    = render partial: 'shared/concept_trophy_block', locals: {concept_progress: concept_progress, added_style: 'padding: 10px;'}
