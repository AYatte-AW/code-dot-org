#!/usr/bin/env ruby

# The map on code.org/yourschool is run off of a Google Fusion Table
# (documentation: https://developers.google.com/maps/documentation/javascript/fusiontableslayer).
# This script updates the fusion table using the REST API
# (documentation: https://developers.google.com/fusiontables/docs/v2/using),
# populating it with all rows from the census_summaries table for the appropriate school year.

# After setting up authentication, provide the following CDO.* attributes:
#   CDO.hoc_map_account: (JSON of a credential which can edit the FusionTables table)
#   CDO.census_map_table_id: (the id of the fusion table)

require File.expand_path('../../../pegasus/src/env', __FILE__)
require src_dir 'database'
require 'cdo/properties'
require 'dynamic_config/dcdo'
require 'csv'

DB_READONLY = Sequel.connect(CDO.pegasus_db_reader.sub('mysql:', 'mysql2:'))

year = Date.today.year - 1


num = 0
count = 0
geojson = JSON.parse('{ "type": "FeatureCollection", "features": [] }')
CSV.read('/home/ubuntu/hoc-events.csv', headers: true).map do |row|
  location = row['location']
  organization_name = row['organization_name']
  count = count + 1
  splits = location.split(',')
  next unless splits.length == 2
  long = splits[1].to_f
  lat = splits[0].to_f

  geojson["features"] << 
    {
      geometry: {
        coordinates: [long, lat],
        type: "Point"
      },
      "properties": {
        description: organization_name
      },
      type: "Feature"
    }
  if count > 50000 then
    File.open("/home/ubuntu/code-dot-org/pegasus/sites.v3/code.org/public/hoc-#{num}.json", 'w') do |file|
      file.write(JSON.pretty_generate(geojson))
      count = 0
      geojson = JSON.parse('{ "type": "FeatureCollection", "features": [] }')
      num = num + 1
    end
  end
end
    File.open("/home/ubuntu/code-dot-org/pegasus/sites.v3/code.org/public/hoc-#{num}.json", 'w') do |file|
      file.write(JSON.pretty_generate(geojson))
      count = 0
      geojson = JSON.parse('{ "type": "FeatureCollection", "features": [] }')
      num = num + 1
    end

