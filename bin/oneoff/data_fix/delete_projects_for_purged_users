#!/usr/bin/env ruby

require_relative '../../../dashboard/config/environment'
require 'cdo/delete_accounts_helper'

# Delete Project S3 Objects created by Users whose accounts were purged if Project data is restored from offsite backup.
# Student project S3 Objects are irrevocably deleted by the Account Purger (28 days after the user's account is
# soft deleted). But, S3 Bucket Replication (used to backup project buckets to offsite account for disaster recovery)
# intentionally does not propagate Object deletion to the backup to prevent malicious deletions from propagating to the
# backup. In the unlikely recovery scenario that the projects system is restored from the offsite backup, use this script
# to delete S3 Objects for projects belonging to purged users.

options = {actually_delete: false}
OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename(__FILE__)} [options]"
  opts.on('-d', '--actually-delete', 'Actually perform the delete.') do
    options[:actually_delete] = true
  end
  opts.on('-h', '--help', 'Add -d to perform the delete.') do
    puts opts
    exit
  end
end.parse!
CDO.log.info "Called with options: #{options}"

start_user_id = User.first.id
end_user_id = User.last.id

BATCH_SIZE = 200

purged_users = 0
users_purged_of_project_objects = 0
users_with_project_purge_errors = 0
User.
  with_deleted.
  where.not(purged_at: nil).
  find_in_batches(start: start_user_id, finish: end_user_id, batch_size: BATCH_SIZE) do |user_batch|
  user_batch.each do |user|
    purged_users += 1
    CDO.log.info "#{options[:actually_delete] ? 'Deleting' : 'DRY RUN is not deleting'} project objects for purged user id: #{user.id}"
    if options[:actually_delete]
      delete_project_backed_progress(user)
      users_purged_of_project_objects += 1
    end
  rescue => error
    users_with_project_purge_errors += 1
    CDO.log.error error
  end
end

CDO.log.info "Script completed"
CDO.log.info "Iterated through #{purged_users} purged users."
CDO.log.info "S3 Objects deleted for #{users_purged_of_project_objects} users with #{users_with_project_purge_errors} errors"
