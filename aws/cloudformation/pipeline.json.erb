{
  "objects": [
    {
      "id": "Default",
      "name": "Default",
      "failureAndRerunMode": "CASCADE",
      "schedule": {"ref": "DefaultSchedule"},
      "resourceRole": "DataPipelineDefaultResourceRole",
      "role": "DataPipelineDefaultRole",
      "pipelineLogUri": "s3://redshift-tableau",
      "scheduleType": "cron"
    },
    {
      "id": "DefaultSchedule",
      "name": "Every 1 day",
      "type": "Schedule",
      "period": "1 days",
      "startDateTime": "2016-06-27T07:45:00"
    },
    {
      "id": "Ec2Instance",
      "name": "Ec2Instance",
      "type": "Ec2Resource",
      "scheduleType": "TIMESERIES",
      "actionOnTaskFailure": "terminate",
      "terminateAfter": "2 Hours",
      "subnetId": "#{myEc2InstanceSubnet}",
      "securityGroupIds": "#{myRDSRedshiftSecurityGrps}"
    },
    {
      "id": "RDSDatabase",
      "name": "RDSDatabase",
      "type": "JdbcDatabase",
      "jdbcProperties": "allowMultiQueries=true",
      "jdbcDriverClass": "com.mysql.jdbc.Driver",
      "connectionString": "#{myRDSJdbcConnectStr}",
      "username": "#{myRDSUsername}",
      "*password": "#{*myRDSPassword}"
    },
    {
      "id": "RedshiftCluster",
      "name": "RedshiftCluster",
      "type": "RedshiftDatabase",
      "connectionString": "#{myRedshiftJdbcConnectStr}",
      "*password": "#{*myRedshiftPassword}",
      "username": "#{myRedshiftUsername}"
    },

<%
table_names = tables.map do |table|
  t = table[:name]
  table_name = table[:name].camelize
-%>
    {
      "id": "RDS<%=table_name%>",
      "name": "RDS<%=table_name%>",
      "type": "SqlDataNode",
      "database": {"ref": "RDSDatabase"},
      "table": "<%=t%>",
      "selectQuery": "select <%=table[:select] || '*'%> from <%=t%> where #{myRDSTableLastModifiedCol} >= '#{format(@scheduledStartTime, 'YYYY-MM-dd HH-mm-ss')}' and #{myRDSTableLastModifiedCol} <= '#{format(@scheduledEndTime, 'YYYY-MM-dd HH-mm-ss')}'",
      "scheduleType": "TIMESERIES"
    },
    {
      "id": "S3<%=table_name%>",
      "name": "S3<%=table_name%>",
      "type": "S3DataNode",
      "scheduleType": "TIMESERIES",
      "directoryPath": "#{myS3StagingLoc}/#{format(@scheduledStartTime, 'YYYY-MM-dd-HH-mm-ss')}/<%=t%>"
    },
    {
      "id": "Redshift<%=table_name%>",
      "name": "Redshift<%=table_name%>",
      "type": "RedshiftDataNode",
      "database": {"ref": "RedshiftCluster"},
      "tableName": "<%=t%>",
      "schemaName": "<%=table[:schema]%>",
      "scheduleType": "TIMESERIES"
    },
    {
      "id": "RedshiftCreate<%=table_name%>",
      "name": "RedshiftCreate<%=table_name%>",
      "type": "ShellCommandActivity",
      "input": {"ref": "RDS<%=table_name%>"},
      "output": {"ref": "Redshift<%=table_name%>"},
      "scriptUri": "s3://cdo-dist/dbconv.sh",
      "scriptArgument": [
        "--rds_jdbc=#{myRDSJdbcConnectStr}",
        "--rds_tbl=<%=t%>",
        "--rds_pwd=#{*myRDSPassword}",
        "--rds_usr=#{myRDSUsername}",
        "--red_jdbc=#{myRedshiftJdbcConnectStr}",
        "--red_usr=#{myRedshiftUsername}",
        "--red_pwd=#{*myRedshiftPassword}",
        "--red_tbl=<%=table[:schema]%>.<%=t%>",
        "--red_dist=#{myRedshiftDistributionKey}",
        "--red_sort=#{myRedshiftSortKeys}",
        "--red_map=#{myRedshiftTypeConvOverrideMap}",
        "--red_ins=#{myInsertMode}",
        "<%=table[:select] ? "--rds_cols=#{table[:select]}" : ''%>"
      ],
      "runsOn": {"ref": "Ec2Instance"},
      "scheduleType": "TIMESERIES"
    },
    {
      "id": "RDSToS3<%=table_name%>",
      "name": "RDSToS3<%=table_name%>",
      "type": "CopyActivity",
      "input": {"ref": "RDS<%=table_name%>"},
      "output": {"ref": "S3<%=table_name%>"},
      "runsOn": {"ref": "Ec2Instance"},
      "scheduleType": "TIMESERIES"
    },
    {
      "id": "S3ToRedshift<%=table_name%>",
      "name": "S3ToRedshift<%=table_name%>",
      "type": "RedshiftCopyActivity",
      "dependsOn": [
        {"ref": "RedshiftCreate<%=table_name%>"},
        {"ref": "RDSToS3<%=table_name%>"}
      ],
      "input": {"ref": "S3<%=table_name%>"},
      "output": {"ref": "Redshift<%=table_name%>"},
      "insertMode": "#{myInsertMode}",
      "runsOn": {"ref": "Ec2Instance"},
      "scheduleType": "TIMESERIES"
    },
<%
  table_name
end
-%>

    {
      "id": "S3",
      "name": "S3",
      "type": "S3DataNode",
      "scheduleType": "TIMESERIES",
      "directoryPath": "#{myS3StagingLoc}/#{format(@scheduledStartTime, 'YYYY-MM-dd-HH-mm-ss')}"
    },
    {
      "id": "S3Cleanup",
      "name": "S3Cleanup",
      "type": "ShellCommandActivity",
      "input": {"ref": "S3"},
      "dependsOn": <%= table_names.map{|name| {ref: "S3ToRedshift#{name}"}}.to_json %>,
      "runsOn": {"ref": "Ec2Instance"},
      "command": "(sudo yum -y update aws-cli) && (aws s3 rm #{input.directoryPath} --recursive)",
      "scheduleType": "TIMESERIES"
    }
  ],
  "parameters": [
    {
      "description": "RDS MySQL password",
      "id": "*myRDSPassword",
      "type": "String"
    },
    {
      "description": "Redshift username",
      "id": "myRedshiftUsername",
      "type": "String"
    },
    {
      "watermark": "jdbc:mysql://dbinstance.id.region.rds.amazonaws.com:3306/dbname",
      "description": "RDS MySQL connection string",
      "id": "myRDSJdbcConnectStr",
      "type": "String"
    },
    {
      "helpText": "The S3 folder to store RDS MySQL table data before loading to Redshift. The S3 folder must be in the same region as the Redshift cluster.",
      "description": "S3 staging folder",
      "id": "myS3StagingLoc",
      "type": "AWS::S3::ObjectKey"
    },
    {
      "helpText": "Override the default mapping of RDS MySQL data types to Redshift data types.",
      "watermark": "tinyint(1):smallint,char(35):varchar(70),bigint(20) unsigned:bigint",
      "description": "MySQL to Redshift type conversion overrides",
      "optional": "true",
      "id": "myRedshiftTypeConvOverrideMap",
      "type": "String"
    },
    {
      "watermark": "columnName",
      "helpText": "Distribution key column in the Redshift table. If the distribution key is not specified, the primary key is set as a distribution key.",
      "description": "Redshift table distribution key",
      "optional": "true",
      "id": "myRedshiftDistributionKey",
      "type": "String"
    },
    {
      "default": "OVERWRITE_EXISTING",
      "helpLink": "https://docs.aws.amazon.com/console/datapipeline/redshiftcopyactivity",
      "helpText": "Determines how to handle pre-existing data in the target table that overlaps with rows in the data to be loaded.",
      "description": "Redshift table insert mode",
      "id": "myInsertMode",
      "type": "String"
    },
    {
      "description": "Redshift password",
      "id": "*myRedshiftPassword",
      "type": "String"
    },
    {
      "helpText": "Name of the column that stores the last modified time value in the RDS MySQL table.",
      "description": "Last modified column name",
      "id": "myRDSTableLastModifiedCol",
      "type": "String"
    },
    {
      "default": "default",
      "watermark": "security group name",
      "helpText": "The names of one or more security groups that collectively provide the EC2 instance connectivity to both the RDS instance and Redshift cluster.",
      "description": "RDS and Redshift security group(s)",
      "isArray": "true",
      "id": "myRDSRedshiftSecurityGrps",
      "type": "String"
    },
    {
      "description": "RDS MySQL username",
      "id": "myRDSUsername",
      "type": "String"
    },
    {
      "watermark": "columnName1,columnName2",
      "helpText": "Sort key columns in the Redshift table.",
      "description": "Redshift table sort keys",
      "optional": "true",
      "id": "myRedshiftSortKeys",
      "type": "String"
    },
    {
      "watermark": "jdbc:postgresql://endpoint:port/database?tcpKeepAlive=true",
      "description": "Redshift JDBC connection string",
      "id": "myRedshiftJdbcConnectStr",
      "type": "String"
    }
  ],
  "values": {
    "myS3StagingLoc": {"Fn::Join": ["/", [{"Ref": "RedshiftS3"}, "<%=db_name%>"]]},
    "myRDSTableLastModifiedCol": "updated_at",
    "myRDSJdbcConnectStr": {"Fn::Join": ["", [
      "jdbc:mysql://",{"Ref": "RDSHostname"},":",{"Ref":"RDSPort"},"/","<%=db_name%>"
    ]]},
    "myRDSUsername": {"Ref": "RDSUsername"},
    "*myRDSPassword": {"Ref": "RDSPassword"},
    "myRDSRedshiftSecurityGrps": {"Fn::GetAtt": ["VPC", "FrontendSecurityGroup"]},
    "myRedshiftJdbcConnectStr": {"Fn::Join": ["", [
      "jdbc:redshift://",{"Fn::GetAtt": ["Tableau", "Endpoint.Address"]},":",{"Fn::GetAtt": ["Tableau", "Endpoint.Port"]},"/",{"Ref": "RedshiftDatabase"},"?tcpKeepAlive=true"
    ]]},
    "myRedshiftUsername": {"Ref": "RedshiftUsername"},
    "*myRedshiftPassword": {"Ref": "RedshiftPassword"},
    "myInsertMode": "OVERWRITE_EXISTING",
    "myEc2InstanceSubnet": {"Fn::GetAtt": ["VPC", "Subnet<%=az%>"]}
  }
}
