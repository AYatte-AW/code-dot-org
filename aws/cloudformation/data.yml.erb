<%
require 'cdo/aws/data_pipeline'
require 'active_support/inflector'
require 'active_support/core_ext/object/blank'

tables = %w(
#  scripts
#  followers
#  stages
#  script_levels
#  workshops
#  segments
#  puzzle_ratings
#  user_scripts
  channel_tokens
  levels
  user_proficiencies
  workshop_attendance
  hint_view_requests
  authored_hint_view_requests
  level_concept_difficulties
  survey_results
  sections
).map do |table|
  {
    name: table,
    db: 'dashboard',
    schema: 'dashboard'
  }
end.concat([
  {
    name: 'users',
    db: 'dashboard',
    schema: 'dashboard',
    select: 'id,deleted_at,created_at,updated_at,current_sign_in_at,last_sign_in_at,sign_in_count,admin,user_type,gender,birthday,locale,total_lines'
  },
]).concat(%w(
  storage_apps
  forms
).map do |table|
  {
    name: table,
    db: 'pegasus',
    schema: 'pegasus'
  }
end)

-%>
---
AWSTemplateFormatVersion: 2010-09-09
Description: Data layer for Tableau including RedShift cluster configuration and scheduled Data Pipeline activities.
# Parameters can be provided via CDO.underscored_parameter, e.g. via locals.yml:
# redshift_password: abcdef
# Parameters are only required for initial stack creation, and reused if not provided on stack update.
Parameters:
  RedshiftPassword:
    Type: String
    NoEcho: true
  RDSPassword:
    Type: String
    NoEcho: true
  RedshiftUsername:
    Type: String
    Default: dev
  RDSUsername:
    Type: String
  RedshiftS3:
    Type: String
    Default: 's3://redshift-tableau/Tableau'
  RedshiftDatabase:
    Type: String
    Default: dashboard
  RDSHostname:
    Type: String
  RDSPort:
    Type: Number
    Default: 3306
Resources:
  VPC: <%= lambda.call 'LookupStackOutputs', StackName: 'VPC', Nonce: 0 %>
  Tableau:
    Type: AWS::Redshift::Cluster
    Properties:
      AllowVersionUpgrade: true
      AutomatedSnapshotRetentionPeriod: 1
      ClusterParameterGroupName: default.redshift-1.0
      ClusterSubnetGroupName: {'Fn::GetAtt': [VPC, RedshiftSubnetGroup]}
      ClusterType: single-node
      ClusterVersion: 1.0
      DBName: {Ref: RedshiftDatabase}
      Encrypted: true
      KmsKeyId: alias/aws/redshift
      MasterUsername: {Ref: RedshiftUsername}
      MasterUserPassword: {Ref: RedshiftPassword}
      NodeType: dc1.large
      PubliclyAccessible: true
      VpcSecurityGroupIds: ['Fn::GetAtt': [VPC, RedshiftSecurityGroup]]
<% %w(dashboard pegasus).map do |app| -%>
  RDSSync<%=app.camelize%>: <%= AWS::DataPipeline.to_cfn(
    "rds-to-redshift-#{app}",
    "Sync RDS-#{app} to Redshift",
    File.read(aws_dir('cloudformation', 'pipeline.json.erb')),
    tables: tables.select{|table| table[:db] == app},
    db_name: app == 'pegasus' ? CDO.pegasus_db_name : CDO.dashboard_db_name,
    az: azs.first
  )%>
<% end -%>
Outputs:
  Redshift:
    Description: Tableau endpoint
    Value: {Ref: Tableau}
